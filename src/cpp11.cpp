// Generated by cpp11: do not edit by hand
// clang-format off


#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// concaveman.cpp
cpp11::data_frame cpp_concaveman(cpp11::data_frame xy, cpp11::integers hull_in, const double concavity, const double lengthThreshold);
extern "C" SEXP _cchull_cpp_concaveman(SEXP xy, SEXP hull_in, SEXP concavity, SEXP lengthThreshold) {
  BEGIN_CPP11
    return cpp11::as_sexp(cpp_concaveman(cpp11::as_cpp<cpp11::decay_t<cpp11::data_frame>>(xy), cpp11::as_cpp<cpp11::decay_t<cpp11::integers>>(hull_in), cpp11::as_cpp<cpp11::decay_t<const double>>(concavity), cpp11::as_cpp<cpp11::decay_t<const double>>(lengthThreshold)));
  END_CPP11
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_cchull_cpp_concaveman", (DL_FUNC) &_cchull_cpp_concaveman, 4},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_cchull(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
